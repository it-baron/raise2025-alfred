alfred.go-to-prod.com {
  encode gzip zstd

  # Security headers
	header {
		Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
		X-Content-Type-Options "nosniff"
		X-Frame-Options "DENY"
		Referrer-Policy "strict-origin-when-cross-origin"
		Cache-Control "no-cache, no-store, must-revalidate"
	}

  	# Handle CORS with proper origin validation
	@valid_origin {
		header_regexp Origin "^https?://([^/]+\.upgraide\.(dev|me)|localhost(:[0-9]+)?)$"
	}

	# Set dynamic CORS headers for valid origins
	header @valid_origin {
		Access-Control-Allow-Origin "{http.request.header.Origin}"
		Access-Control-Allow-Credentials "true"
		Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
		Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since"
		Access-Control-Max-Age "3600"
		defer
	}

	# Handle OPTIONS preflight requests
	@cors_preflight {
		method OPTIONS
	}

	handle @cors_preflight {
		respond 204
	}

	handle /* {
		reverse_proxy store-web:3000 {
			header_up Host {host}
			header_up X-Real-IP {remote}
		}
	}
}